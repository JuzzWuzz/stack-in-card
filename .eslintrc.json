{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "modules": true
    },
    "ecmaVersion": 2022,
    "experimentalDecorators": true,
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "prettier",
    "import"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "rules": {
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "camelcase": 0,
    "no-console": 0,

    // Sort the actual imports of packages: { c, b, a } => { a, b, c }
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true, // don"t want to sort import lines, use eslint-plugin-import instead
        "ignoreMemberSort": false,
        "memberSyntaxSortOrder": [
          "none",
          "all",
          "multiple",
          "single"
        ],
        "allowSeparatedGroups": true
      }
    ],

    // Turn on errors for missing imports
    "import/no-unresolved": "error",

    // 'import/no-named-as-default-member': 'off',
    "import/order": [
      "error",
      {
        "groups": [
          "builtin", // Built-in imports (come from NodeJS native) go first
          "external", // <- External imports
          "internal", // <- Absolute imports
          [
            "sibling",
            "parent"
          ], // <- Relative imports, the sibling and parent types they can be mingled together
          "index", // <- index imports
          "unknown" // <- unknown

        ],
        "newlines-between": "always",
        "alphabetize": {
          /* Sort in ascending order. Options: ["ignore", "asc", "desc"] */
          "order": "asc",
          /* Ignore case. Options: [true, false] */
          "caseInsensitive": true
        }
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "project": "./tsconfig.json"
      }
    }
  },
  "ignorePatterns": [
    "dist/",
    "rollup.config.js"
  ]
}
